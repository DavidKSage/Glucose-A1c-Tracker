{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Samsung USB/Projects/Glucose-A1-c-Tracker/frontend/src/components/GetRangeData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\nimport PageHeader from './PageHeader';\nimport MakeRangeTable from './MakeRangeTable';\nimport MakeRangeAverage from './MakeRangeAverage';\nimport MakeRangeChart from './MakeRangeChart';\n\nfunction GetRangeData() {\n  _s();\n\n  const [dateValue, onDateChange] = useState([new Date(), new Date()]);\n  const [data, setData] = useState({\n    ret: [],\n    day_avg: 0\n  });\n  const [isClicked, setIsClicked] = useState(false);\n  const [errorMsg, setErrorMsg] = useState({\n    errorNo: '',\n    errorText: ''\n  });\n\n  function handleResponse(response) {\n    setData(response.data);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setIsClicked(true);\n    axios.get('/getrangedata', {\n      params: {\n        username: sessionStorage.getItem('username'),\n        startdate: dateValue[0].getDate(),\n        enddate: dateValue[1].getDate()\n      }\n    }).then(handleResponse).catch(error => {\n      setErrorMsg({\n        errorNo: error.response.status,\n        errorText: error.response.data.message\n      });\n    });\n  }\n\n  if (isClicked) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        children: [\"Glucose Readings for \", moment(dateValue[0]).format('MM/DD/YYYY'), \" - \", moment(dateValue[1]).format('MM/DD/YYYY')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"red\",\n            textAlign: \"center\"\n          },\n          children: errorMsg.errorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [console.log(data), /*#__PURE__*/_jsxDEV(MakeRangeTable, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(MakeRangeAverage, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MakeRangeChart, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      children: \"Glucose Readings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: \"red\"\n            },\n            children: errorMsg.errorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [\"Choose Date:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(DateRangePicker, {\n            onChange: onDateChange,\n            value: dateValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            size: \"md\",\n            className: \"mx-auto mb-3\",\n            variant: \"outline-dark\",\n            style: {\n              backgroundColor: \"lavender\",\n              color: \"black\"\n            },\n            type: \"submit\",\n            onClick: handleSubmit,\n            children: \"Get Reading Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GetRangeData, \"5KpoGP/jbrceA7Hw38Nvem2fH80=\");\n\n_c = GetRangeData;\nexport default GetRangeData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetRangeData\");","map":{"version":3,"sources":["/Volumes/Samsung USB/Projects/Glucose-A1-c-Tracker/frontend/src/components/GetRangeData.js"],"names":["React","useState","axios","moment","Container","Row","Col","Button","DateRangePicker","PageHeader","MakeRangeTable","MakeRangeAverage","MakeRangeChart","GetRangeData","dateValue","onDateChange","Date","data","setData","ret","day_avg","isClicked","setIsClicked","errorMsg","setErrorMsg","errorNo","errorText","handleResponse","response","handleSubmit","event","preventDefault","get","params","username","sessionStorage","getItem","startdate","getDate","enddate","then","catch","error","status","message","format","color","textAlign","console","log","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker'\nimport PageHeader from './PageHeader';\nimport MakeRangeTable from './MakeRangeTable';\nimport MakeRangeAverage from './MakeRangeAverage';\nimport MakeRangeChart from './MakeRangeChart';\n\nfunction GetRangeData () {\n\n    const [dateValue, onDateChange] = useState([new Date(), new Date()]);\n\n    const [data, setData] = useState({\n        ret: [],\n        day_avg: 0\n    });\n    \n    const [isClicked, setIsClicked] = useState(false);\n\n    const [errorMsg, setErrorMsg] = useState({\n        errorNo: '',\n        errorText: ''\n    })\n\n    function handleResponse(response) {\n        setData(response.data)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setIsClicked(true);\n        axios.get('/getrangedata', {\n            params: {\n            username: sessionStorage.getItem('username'),\n            startdate: dateValue[0].getDate(),\n            enddate: dateValue[1].getDate()\n            }\n          })\n          .then(handleResponse)\n          .catch(error => {\n            setErrorMsg({\n                errorNo: error.response.status,\n                errorText: error.response.data.message\n            });\n        })\n      }\n\n        if(isClicked) {\n            return(\n                <React.Fragment>\n                    <PageHeader>Glucose Readings for {moment(dateValue[0]).format('MM/DD/YYYY')} - {moment(dateValue[1]).format('MM/DD/YYYY')}</PageHeader>\n                <Container>\n                    <h3 style={{ color: \"red\", textAlign: \"center\" }}>{errorMsg.errorText}</h3>\n                    <Row>\n                        <Col></Col>\n                        <Col>\n                            {console.log(data)}\n                            <MakeRangeTable data={data} />\n                        </Col>\n                        <Col>\n                            <MakeRangeAverage data={data} />\n                        </Col>\n                        </Row>\n                        </Container>\n                        <MakeRangeChart data={data} />\n            </React.Fragment>\n            )\n        }\n    return (\n        <React.Fragment>\n            <PageHeader>Glucose Readings</PageHeader>\n                <Container>\n                    <Row>\n                        <Col></Col>\n                        <Col md={4}><h3 style={{ color: \"red\" }}>{errorMsg.errorText}</h3></Col>\n                        <Col></Col>\n                    </Row>\n                    <Row>\n                        <Col></Col>\n                        <Col md={4}>\n                        \n                            Choose Date:<br />\n                            <DateRangePicker onChange={onDateChange} value={dateValue} />\n                        </Col>\n                        <Col>\n                        </Col>\n                    </Row>\n                <br />\n                    <Row>\n                        <Col></Col>\n                        <Col md={4}>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <Button\n                                    size = \"md\"\n                                    className=\"mx-auto mb-3\"\n                                    variant=\"outline-dark\"\n                                    style={{ backgroundColor: \"lavender\", color: \"black\" }}\n                                    type=\"submit\"\n                                    onClick={handleSubmit}\n                                >\n                                    Get Reading Data\n                                </Button>\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n    </React.Fragment>\n    );\n}\n\nexport default GetRangeData;"]},"metadata":{},"sourceType":"module"}