{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dkstenor/Library/Mobile Documents/com~apple~CloudDocs/Code/Glucose-A1-c-Tracker/frontend/src/components/MakeChart.js\";\nimport React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nfunction MakeChart(props) {\n  function tConv24(time24) {\n    var ts = time24;\n    var H = +ts.substr(0, 2);\n    var h = H % 12 || 12;\n    h = h < 10 ? \"0\" + h : h; // leading 0 at the left for 1 digit hours\n\n    var ampm = H < 12 ? \" AM\" : \" PM\";\n    ts = h + ts.substr(2, 3) + ampm;\n    return ts;\n  }\n\n  ;\n  const options = {\n    chart: {\n      type: \"spline\"\n    },\n    title: {\n      text: \"Glucose Readings\"\n    },\n    xAxis: {\n      categories: props.data.ret.map(dataItem => tConv24(dataItem.reading_time))\n    },\n    yAxis: {\n      title: {\n        text: \"Glucose\"\n      }\n    },\n    plotOptions: {\n      series: {\n        color: 'purple'\n      },\n      line: {\n        dataLabels: {\n          enabled: true\n        },\n        enableMouseTracking: false\n      }\n    },\n    series: [{\n      name: \"Daily Readings\",\n      data: props.data.ret.map(dataItem => dataItem.my_reading)\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MakeChart;\nexport default MakeChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeChart\");","map":{"version":3,"sources":["/Users/dkstenor/Library/Mobile Documents/com~apple~CloudDocs/Code/Glucose-A1-c-Tracker/frontend/src/components/MakeChart.js"],"names":["React","Highcharts","HighchartsReact","MakeChart","props","tConv24","time24","ts","H","substr","h","ampm","options","chart","type","title","text","xAxis","categories","data","ret","map","dataItem","reading_time","yAxis","plotOptions","series","color","line","dataLabels","enabled","enableMouseTracking","name","my_reading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAEtB,WAASC,OAAT,CAAiBC,MAAjB,EAAyB;AACrB,QAAIC,EAAE,GAAGD,MAAT;AACA,QAAIE,CAAC,GAAG,CAACD,EAAE,CAACE,MAAH,CAAU,CAAV,EAAa,CAAb,CAAT;AACA,QAAIC,CAAC,GAAIF,CAAC,GAAG,EAAL,IAAY,EAApB;AACAE,IAAAA,CAAC,GAAIA,CAAC,GAAG,EAAL,GAAU,MAAIA,CAAd,GAAiBA,CAArB,CAJqB,CAII;;AACzB,QAAIC,IAAI,GAAGH,CAAC,GAAG,EAAJ,GAAS,KAAT,GAAiB,KAA5B;AACAD,IAAAA,EAAE,GAAGG,CAAC,GAAGH,EAAE,CAACE,MAAH,CAAU,CAAV,EAAa,CAAb,CAAJ,GAAsBE,IAA3B;AACA,WAAOJ,EAAP;AACD;;AAAA;AAGH,QAAMK,OAAO,GAAG;AACZC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KADK;AAIZC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KAJK;AAOZC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EACRd,KAAK,CAACe,IAAN,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,QAAQ,IACzBjB,OAAO,CAACiB,QAAQ,CAACC,YAAV,CADT;AAFG,KAPK;AAaZC,IAAAA,KAAK,EAAE;AACLT,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD;AADF,KAbK;AAkBZS,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AADD,OADG;AAIXC,MAAAA,IAAI,EAAE;AACJC,QAAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAE;AADC,SADR;AAIJC,QAAAA,mBAAmB,EAAE;AAJjB;AAJK,KAlBD;AA6BZL,IAAAA,MAAM,EAAE,CACN;AACEM,MAAAA,IAAI,EAAE,gBADR;AAEEb,MAAAA,IAAI,EAAEf,KAAK,CAACe,IAAN,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,QAAQ,IAC/BA,QAAQ,CAACW,UADL;AAFR,KADM;AA7BI,GAAhB;AAsCA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI,QAAC,eAAD;AAAiB,MAAA,UAAU,EAAEhC,UAA7B;AAAyC,MAAA,OAAO,EAAEW;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KAxDQT,S;AA6DT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nfunction MakeChart(props) {\n\n    function tConv24(time24) {\n        var ts = time24;\n        var H = +ts.substr(0, 2);\n        var h = (H % 12) || 12;\n        h = (h < 10)?(\"0\"+h):h;  // leading 0 at the left for 1 digit hours\n        var ampm = H < 12 ? \" AM\" : \" PM\";\n        ts = h + ts.substr(2, 3) + ampm;\n        return ts;\n      };\n\n\n    const options = {\n        chart: {\n          type: \"spline\"\n        },\n        title: {\n          text: \"Glucose Readings\"\n        },\n        xAxis: {\n          categories: \n            props.data.ret.map(dataItem => \n              tConv24(dataItem.reading_time))\n          \n        },\n        yAxis: {\n          title: {\n            text: \"Glucose\"\n          }\n        },\n        plotOptions: {\n          series: {\n            color: 'purple'\n        },\n          line: {\n            dataLabels: {\n              enabled: true\n            },\n            enableMouseTracking: false\n          },\n        },\n        series: [\n          {\n            name: \"Daily Readings\",\n            data: props.data.ret.map(dataItem => \n              dataItem.my_reading)\n          }\n        ]\n      };\n\n    return (\n        <React.Fragment>\n            <HighchartsReact highcharts={Highcharts} options={options} />\n        </React.Fragment>\n    )\n}\n\n\n\n\nexport default MakeChart;"]},"metadata":{},"sourceType":"module"}