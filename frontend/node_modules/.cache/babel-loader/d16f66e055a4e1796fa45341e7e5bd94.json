{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Samsung USB/Projects/Glucose-A1-c-Tracker/frontend/src/components/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, FormText, Button, Container, Row } from 'reactstrap';\nimport axios from 'axios';\nimport PageHeader from './PageHeader';\n\nfunction LoginPage() {\n  _s();\n\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [errorMsg, setErrorMsg] = useState({\n    errorNo: '',\n    errorText: ''\n  });\n\n  function handleChange(e) {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function handleResponse(response) {\n    if (response.status === 200) sessionStorage.setItem('isLoggedIn', 'True');\n    sessionStorage.setItem('username', formData.username);\n    setFormData({\n      username: '',\n      password: ''\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios.post('/login', {\n      username: formData.username,\n      password: formData.password\n    }).then(handleResponse).catch(error => {\n      setErrorMsg({\n        errorNo: error.response.status,\n        errorText: error.response.data.message\n      });\n    });\n  }\n\n  if (sessionStorage.getItem('isLoggedIn')) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/readingpage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5 w-25 p-3 mr-3px\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(FormText, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: 'red'\n            },\n            children: errorMsg.errorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          style: {\n            textAlign: \"left\"\n          },\n          id: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            autoFocus: true,\n            style: {\n              width: \"95%\"\n            },\n            placeholder: \"Enter username\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          style: {\n            textAlign: \"left\"\n          },\n          id: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            style: {\n              width: \"95%\"\n            },\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mx-auto mb-3\",\n            variant: \"outline-dark\",\n            style: {\n              backgroundColor: \"lavender\",\n              color: \"black\"\n            },\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormText, {\n          className: \"text-muted\",\n          children: [\"Don't have an Account?  Click \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            active: true,\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 47\n          }, this), \" to sign up.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LoginPage, \"NTDN1C5JMsVUKbtLgRIUC49n4Eg=\");\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Volumes/Samsung USB/Projects/Glucose-A1-c-Tracker/frontend/src/components/LoginPage.js"],"names":["React","useState","Redirect","Form","FormGroup","Label","Input","FormText","Button","Container","Row","axios","PageHeader","LoginPage","formData","setFormData","username","password","errorMsg","setErrorMsg","errorNo","errorText","handleChange","e","target","name","value","handleResponse","response","status","sessionStorage","setItem","handleSubmit","event","preventDefault","post","then","catch","error","data","message","getItem","color","textAlign","width","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, FormText, Button, Container, Row } from 'reactstrap';\nimport axios from 'axios';\nimport PageHeader from './PageHeader';\n\nfunction LoginPage() {\n\n    const [formData, setFormData] = useState({\n        username: '',\n        password: ''\n    });\n\n    const [errorMsg, setErrorMsg] = useState({\n        errorNo: '',\n        errorText: ''\n    })\n    \n    function handleChange(e) {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n          });\n      }\n      function handleResponse(response) {\n            if (response.status === 200)\n                sessionStorage.setItem('isLoggedIn', 'True');\n                sessionStorage.setItem('username', formData.username);\n            setFormData({\n                username: '',\n                password: ''\n            });\n      }\n\n      function handleSubmit(event) {\n        event.preventDefault();\n        axios.post('/login', {\n            username: formData.username,\n            password: formData.password\n          })\n          .then(handleResponse)\n          .catch(error => {\n              setErrorMsg({\n                  errorNo: error.response.status,\n                  errorText: error.response.data.message\n              });\n          })\n        }\n          \n    if (sessionStorage.getItem('isLoggedIn')) {\n        return (\n            <Redirect to='/readingpage' />\n        )\n    }\n    return (\n      <React.Fragment>\n        <PageHeader>\n            Welcome\n        </PageHeader>\n        <Container  className=\"mt-5 w-25 p-3 mr-3px\">\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\n            <FormText>\n                <h3 style={{color: 'red'}}>{errorMsg.errorText}</h3>\n            </FormText>\n            <FormGroup style={{textAlign: \"left\"}} id=\"username\">\n                <Label>Username</Label>\n                <Input autoFocus={true} style={{width: \"95%\"}} placeholder=\"Enter username\" name=\"username\" value={formData.username} onChange={handleChange}/>\n            </FormGroup>\n\n            <FormGroup style={{textAlign: \"left\"}} id=\"password\">\n                <Label>Password</Label>\n                <Input style={{width: \"95%\"}} type=\"password\" placeholder=\"Password\" name=\"password\" value={formData.password} onChange={handleChange} />\n            </FormGroup>\n            <Row>\n            <Button className=\"mx-auto mb-3\" variant=\"outline-dark\" style={{backgroundColor: \"lavender\", color: \"black\"}} type=\"submit\">\n                Submit\n            </Button>\n            </Row>\n            <FormText className=\"text-muted\">\n                Don't have an Account?  Click <a href=\"/register\" active>here</a> to sign up.\n            </FormText>\n        </Form>\n        </Container>\n        </React.Fragment>\n    )\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}